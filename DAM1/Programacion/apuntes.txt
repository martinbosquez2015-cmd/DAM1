texto3.equals(texto5)
equalsIgnoreCase
cadenaVacia.isEmpty()

El mÃ©todo indexOf devuelve la posiciÃ³n en la que aparece por primera vez la subcadena
que va como argumento. Si no aparece devuelve -1
		int posicion = texto6.indexOf("a");

texto6.replace("O", "X")
limpiar cadena
    dni = dni.trim()

	// Convertimos de texto a entero
		int num1 = Integer.parseInt(textoEntero);
		System.out.println(num1 + 5);

	// Convertimos de texto a nÃºmero con decimales
		double num2 = Double.parseDouble(textoDecimales);
		System.out.println(num2 * 1.34);

	// Convertimos de entero a texto
		String texto1 = String.valueOf(entero);
		System.out.println(texto1 + 5);

// la forma de redondear con cifras decimales
		final double pi = 3.14159;
		System.out.println("Valor redondeado: " + (double)Math.round(pi * 100) /100);
		System.out.println("Valor redondeado: " + (double)Math.round(pi * 1000) / 1000);
		System.out.println("Valor redondeado: " + (double)Math.round(pi * 10000) / 10000);

// Los mÃ©todos max y min me devuelven el mayor o el menor de dos nÃºmeros
		int mayor = Math.max(35, 67);
		System.out.println("El mayor es: " + mayor);
		int menor = Math.min(35, 67);
		System.out.println("El menor es: " + menor);



// Para generar un nÃºmero aleatorio entre el 1 y el 6, por ejemplo, hacemos esto:
		int dado = (int)(Math.random()*6)+1;
		System.out.println("Tirada de dado de 6 caras: " + dado);
		
		// De forma genÃ©rica, para generar un nÃºmero aleatorio entre dos extremos
		// ambos incluidos, lo hacemos asÃ­:
		int inicio = 2;
		int fin = 4;
		int aleatorio = (int)(Math.random()*(fin-inicio+1)+inicio);


//Esto es para usar el switch	
switch(numero) {
		  case 2:
		    System.out.println("Es un patito");
		    break;
		  case 3:
		    System.out.println("Es una serpiente");
		    break;
		  case 4:
		    System.out.println("Es una silla");
		    /* Este Ãºltomo break sobra porque ya termina la instrucciÃ³n, pero asÃ­ queda mas uniforme */
		    break;
		}

expresiones regulares

Pattern patron = Pattern.compile("\\d{8}");
Matcher coincidencia = patron.matcher("28896");
boolean coincidencia.find();
boolean coincidencia.matcher();
// Algunos ejemplos de patrones mas complejos:
        String consonantes = "[A-ZÃ‘ && [^AEIOU]]{5}"; // valida cinco letras consonantes mayÃºsculas
        if("QÃ‘ERT".matches(consonantes) == true)
        	System.out.println("sÃ³lo tiene consonantes");


	
// AsÃ­ definimos un vector vacio de 5 enteros
		int vector[] = new int[5];
		// Y asÃ­ uno vacÃ­o de 10 cadenas de texto
		String lista[] = new String[10];

// Puedo crear un array de dos dimensiones de esta forma
		int[][] matriz = new int[2][3];
String[][] alumnos= {{"Ana", "Perez"}, {"Roberto", "LÃ³pez"}, {"Manuel", "PelÃ¡ez"}}

// En el segundo array tambiÃ©n he cambiado el valor porque realmente tengo dos variables que apuntan al mismo sitio
		for(String profe: otrosProfesores)
			System.out.print(profe + ", ");
		System.out.println("\n");
			
		// Si realmente quiero una copia independiente uso el mÃ©todo copyOf
		String[] masProfesores = Arrays.copyOf(profesores,profesores.length);
// sort ordena un array de forma ascendente si son nÃºmeros o alfabÃ©ticamente si son string
		Arrays.sort(muchosMasProfesores);

// binarySearch busca si un valor existe en el array, pero solo funciona si el array estÃ¡ ordenado
		// devuelve la posiciÃ³n donde se encuentra el elemento o un valor menor de 0 si no estÃ¡
		System.out.println(Arrays.binarySearch(muchosMasProfesores, "Fernando"));
		if(Arrays.binarySearch(muchosMasProfesores, "Fernando") < 0)
			System.out.println("No estÃ¡ en la lista de profes");
		else
			System.out.println("EstÃ¡ en la lista de profes");
		
		// fill sirve para rellenar todas las posiciones de un array con el mismo valor
		int diasDelMes[] = new int[12];
		Arrays.fill(diasDelMes,31);
		for(int mes:diasDelMes)
			System.out.print(mes + ", ");
		System.out.println("\n");
		
		// toString convierte el contenido del array en una cadena de texto
		String texto = Arrays.toString(muchosMasProfesores);
		System.out.println(texto);
		texto = texto.replace("[", "");
		texto = texto.replace("]", "");
		System.out.println(texto);
//Para imprimir una cadena con matriz
for (int i = 0; i < matriz.length; i++) {
    for (int j = 0; j < matriz[i].length; j++) {
        System.out.print(matriz[i][j] + " ");
    }
    System.out.println(); // salto de lÃ­nea al final de cada fila
}


O


    for (String[] fila : matriz) {
    for (String valor : fila) {
        System.out.print(valor + " ");
    }
    System.out.println();
}




//PAra rellenar una matriz bidimensional
            for (int i = 0; i < numFil; i++) {
            Arrays.fill(matriz[i], "*");